Tema realizata de: Craciunoiu Cezar 314CA

						Honeycombs
						  Tema 2

Programul isi doreste a genera, folosind caractere ASCII, “faguri de miere”, pornind de la date de intrare stricte. Acesta se foloseste de mai multe functii care il ajuta sa realizeze acest lucru.
	Prima functie , “atoi”, face acelasi lucru ca functia “atoi” din biblioteca “stdlib.h”, dar s-a ales sa se implementeze  manual pentru a se evita includerea unei intregi biblioteci pentru o singura functie. Din acelasi motiv a fost creata si functia “lungime_sir”, pentru a se evita includerea bibliotecii “string.h” pentru a se folosi functia “strlen”.
	Functia “inceput_fagure” aseaza pe prima si a doua linie caracterele de tip “_” in functie de care se construieste restul fagurelui, mergand din 4 in 4 pozitii. 
	Functia propriu-zisa “construire_fagure” face exact ce ii spune numele, primele 4 if-uri construiesc fagurele in functie de linia precedenta (daca inainte e “/” se pune “\”, etc). Daca in stanga se afla caracterul “/”, iar deasupra “_” se verifica daca in tabloul cu matci exista coordonatele punctului in care se afla for-ul, daca da se pune caracterul “Q”, daca nu, se lasa spatiu liber.
	Functia “pana_unde_merge” ajuta la diferentierea intre coloanele ridicate si cele coborate pentru a se stii pana unde trebuie parcurs fagurele. Functia “afisare” printeaza pe ecran caracter cu caracter fagurele construit, avand grija sa mearga pana la o lungime bine aleasa ce se formeaza astfel: (2 * lungimea celei mai lungi coloane la care se aduna 1 si inca 1 sau 0 in functie daca fagurele are sau nu toate coloanele de lungime 1).
	In functia main sunt declarate majoritatea variabilelor, iar apoi, folosind o structura repetitiva ce se foloseste de proprietatile functiei de citire fgets(returneaza 0 sau NULL cand nu mai are ce sa citeasca), se citeste linie cu linie. Apoi se reinitializeaza fiecare variabila care este folosita in construirea tablourilor in care se pastreaza valorile de intrare. Folosind o structura for, se pune intr-un string auxiliar “temp” fiecare caracter diferit de R sau C pana intalneste un spatiu. Cand intalneste un spatiu, se foloseste de functia atoi pentru a transforma sirul de caractere intr-un intreg. Cand se intalneste caracterul R sau C, acesta este pastrat intr-o variabila si apoi se va intra pe prima ramura a if-ului, cea care trateaza pozitiile matcilor. Intr-un mod similar se aseaza intr-o matrice pozitiile matcilor, tinandu-se cont de tipul pozitiei (linie sau coloana). Dupa construirea fagurelui, se calculeaza lungimea celei mai mari coloane si apoi se afiseaza fagurele. Se repeta procesul pentru fiecare linie data.
	S-a incercat sa se foloseasca nume de variabile cat mai sugestive pentru a  face mai facila intelegerea programului.
